{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.object.values.js","webpack:///./src/views/Lobby.vue","webpack:///./src/views/Lobby.vue?246e","webpack:///./src/views/Lobby.vue?253c","webpack:///./node_modules/core-js/internals/object-to-array.js"],"names":["$","$values","values","target","stat","O","class","floors","floor","key","id","attributes","label","rooms","room","to","group","this","$store","state","objects","Object","sort","a","b","level","structure","forEach","entry","relationships","data","ref","groups","push","length","components","render","DESCRIPTORS","objectKeys","toIndexedObject","propertyIsEnumerable","f","createMethod","TO_ENTRIES","it","keys","i","result","call","module","exports","entries"],"mappings":"4FAAA,IAAIA,EAAI,EAAQ,QACZC,EAAU,EAAQ,QAAgCC,OAItDF,EAAE,CAAEG,OAAQ,SAAUC,MAAM,GAAQ,CAClCF,OAAQ,SAAgBG,GACtB,OAAOJ,EAAQI,O,8DCNNC,MAAM,S,oFAAf,eASU,UATV,EASU,CARN,eAOK,Y,mBAND,eAKK,2BALe,EAAAC,QAAM,SAAfC,G,wBAAX,eAKK,MALwBC,IAAKD,EAAME,I,CACpC,eAA4D,WAAxD,eAAmD,6BAAxCF,EAAMA,MAAMG,WAAWC,OAAK,KAC3C,eAEK,Y,mBADD,eAAmJ,2BAAhIJ,EAAMK,OAAK,SAAnBC,G,wBAAX,eAAmJ,MAAlHL,IAAKK,EAAKA,KAAKJ,I,CAAI,eAA0F,GAA5EK,GAAE,SAAaD,EAAKA,KAAKJ,I,yBAAI,iBAAiC,C,8BAA9BI,EAAKE,MAAML,WAAWC,OAAK,O,oKCc5H,EAArB,iLACqB,WACb,GAAIK,KAAKC,OAAOC,MAAMC,QAAQb,OAAQ,CAClC,IAAIA,EAASc,OAAOnB,OAAOe,KAAKC,OAAOC,MAAMC,QAAQb,QACrDA,EAASA,EAAOe,MAAK,SAACC,EAAGC,GACrB,OAAID,EAAEZ,YAAca,EAAEb,WACVY,EAAEZ,WAAWc,MAAoBD,EAAEb,WAAWc,MAC/CF,EAAEZ,YACD,EACDa,EAAEb,WACF,EAEA,KAGf,IAAMe,EAAY,GA0BlB,OAzBAnB,EAAOoB,SAAQ,SAACnB,GACZ,IAAMoB,EAAQ,CACV,MAASpB,EACT,MAAS,IAETA,EAAMqB,eAAiBrB,EAAMqB,cAAchB,OAC1CL,EAAMqB,cAAchB,MAAMiB,KAA4BH,SAAQ,SAACI,GAC5D,GAAI,EAAKb,OAAOC,MAAMC,QAAQP,MAAMkB,EAAIrB,IAAK,CACzC,IAAMI,EAAO,EAAKI,OAAOC,MAAMC,QAAQP,MAAMkB,EAAIrB,IACjD,GAAII,EAAKe,eAAiBf,EAAKe,cAAcb,OACrC,EAAKE,OAAOC,MAAMC,QAAQY,OAAQlB,EAAKe,cAAcb,MAAMc,KAA0BpB,IAAK,CAC1F,IAAMM,EAAQ,EAAKE,OAAOC,MAAMC,QAAQY,OAAQlB,EAAKe,cAAcb,MAAMc,KAA0BpB,IACnGkB,EAAMf,MAAMoB,KAAK,CACb,KAAQnB,EACR,MAASE,SAO7BY,EAAMf,MAAMqB,OAAS,GACrBR,EAAUO,KAAKL,MAGhBF,EAEX,MAAO,OA3Cf,GAAmC,QAAd,EAAK,gBAJzB,eAAQ,CACLS,WAAY,MAGK,WCjBrB,EAAOC,OAASA,EAED,gB,uBCLf,IAAIC,EAAc,EAAQ,QACtBC,EAAa,EAAQ,QACrBC,EAAkB,EAAQ,QAC1BC,EAAuB,EAAQ,QAA8CC,EAG7EC,EAAe,SAAUC,GAC3B,OAAO,SAAUC,GACf,IAKInC,EALAJ,EAAIkC,EAAgBK,GACpBC,EAAOP,EAAWjC,GAClB6B,EAASW,EAAKX,OACdY,EAAI,EACJC,EAAS,GAEb,MAAOb,EAASY,EACdrC,EAAMoC,EAAKC,KACNT,IAAeG,EAAqBQ,KAAK3C,EAAGI,IAC/CsC,EAAOd,KAAKU,EAAa,CAAClC,EAAKJ,EAAEI,IAAQJ,EAAEI,IAG/C,OAAOsC,IAIXE,EAAOC,QAAU,CAGfC,QAAST,GAAa,GAGtBxC,OAAQwC,GAAa","file":"js/lobby.c97330ca.js","sourcesContent":["var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.github.io/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","<template>\n    <article class=\"lobby\">\n        <ol>\n            <li v-for=\"floor in floors\" :key=\"floor.id\">\n                <h2><button>{{ floor.floor.attributes.label }}</button></h2>\n                <ul>\n                    <li v-for=\"room in floor.rooms\" :key=\"room.room.id\"><router-link :to=\"'/room/' + room.room.id\">{{ room.group.attributes.label }}</router-link></li>\n                </ul>\n            </li>\n        </ol>\n    </article>\n</template>\n\n<script lang=\"ts\">\nimport { Options } from 'vue-class-component';\n\nimport { ComponentRoot } from '@/base';\nimport { JSONAPIItem, JSONAPIReference } from '@/store';\n\ninterface LobbyEntry {\n    floor: JSONAPIItem;\n    rooms: LobbyEntryRoom[];\n}\n\ninterface LobbyEntryRoom {\n    room: JSONAPIItem;\n    group: JSONAPIItem;\n}\n\n@Options({\n    components: {\n    }\n})\nexport default class Lobby extends ComponentRoot {\n    public get floors() {\n        if (this.$store.state.objects.floors) {\n            let floors = Object.values(this.$store.state.objects.floors);\n            floors = floors.sort((a, b) => {\n                if (a.attributes && b.attributes) {\n                    return (a.attributes.level as number) - (b.attributes.level as number);\n                } else if (a.attributes) {\n                    return -1;\n                } else if (b.attributes) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n            const structure = [] as LobbyEntry[];\n            floors.forEach((floor) => {\n                const entry = {\n                    'floor': floor,\n                    'rooms': []\n                } as LobbyEntry;\n                if (floor.relationships && floor.relationships.rooms) {\n                    (floor.relationships.rooms.data as JSONAPIReference[]).forEach((ref) => {\n                        if (this.$store.state.objects.rooms[ref.id]) {\n                            const room = this.$store.state.objects.rooms[ref.id];\n                            if (room.relationships && room.relationships.group) {\n                                if (this.$store.state.objects.groups[(room.relationships.group.data as JSONAPIReference).id]) {\n                                    const group = this.$store.state.objects.groups[(room.relationships.group.data as JSONAPIReference).id];\n                                    entry.rooms.push({\n                                        'room': room,\n                                        'group': group,\n                                    });\n                                }\n                            }\n                        }\n                    });\n                }\n                if (entry.rooms.length > 0) {\n                    structure.push(entry);\n                }\n            });\n            return structure;\n        }\n        return [];\n    }\n}\n</script>\n","\nimport { Options } from 'vue-class-component';\n\nimport { ComponentRoot } from '@/base';\nimport { JSONAPIItem, JSONAPIReference } from '@/store';\n\ninterface LobbyEntry {\n    floor: JSONAPIItem;\n    rooms: LobbyEntryRoom[];\n}\n\ninterface LobbyEntryRoom {\n    room: JSONAPIItem;\n    group: JSONAPIItem;\n}\n\n@Options({\n    components: {\n    }\n})\nexport default class Lobby extends ComponentRoot {\n    public get floors() {\n        if (this.$store.state.objects.floors) {\n            let floors = Object.values(this.$store.state.objects.floors);\n            floors = floors.sort((a, b) => {\n                if (a.attributes && b.attributes) {\n                    return (a.attributes.level as number) - (b.attributes.level as number);\n                } else if (a.attributes) {\n                    return -1;\n                } else if (b.attributes) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n            const structure = [] as LobbyEntry[];\n            floors.forEach((floor) => {\n                const entry = {\n                    'floor': floor,\n                    'rooms': []\n                } as LobbyEntry;\n                if (floor.relationships && floor.relationships.rooms) {\n                    (floor.relationships.rooms.data as JSONAPIReference[]).forEach((ref) => {\n                        if (this.$store.state.objects.rooms[ref.id]) {\n                            const room = this.$store.state.objects.rooms[ref.id];\n                            if (room.relationships && room.relationships.group) {\n                                if (this.$store.state.objects.groups[(room.relationships.group.data as JSONAPIReference).id]) {\n                                    const group = this.$store.state.objects.groups[(room.relationships.group.data as JSONAPIReference).id];\n                                    entry.rooms.push({\n                                        'room': room,\n                                        'group': group,\n                                    });\n                                }\n                            }\n                        }\n                    });\n                }\n                if (entry.rooms.length > 0) {\n                    structure.push(entry);\n                }\n            });\n            return structure;\n        }\n        return [];\n    }\n}\n","import { render } from \"./Lobby.vue?vue&type=template&id=49247eea&bindings={}\"\nimport script from \"./Lobby.vue?vue&type=script&lang=ts\"\nexport * from \"./Lobby.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","var DESCRIPTORS = require('../internals/descriptors');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {\n        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.github.io/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.github.io/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n"],"sourceRoot":""}