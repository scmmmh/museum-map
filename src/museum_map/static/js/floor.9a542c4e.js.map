{"version":3,"sources":["webpack:///./src/views/Floor.vue","webpack:///./src/views/Floor.vue?d14d","webpack:///./src/views/Floor.vue?ec14"],"names":["class","floors","floor","key","id","to","attributes","label","topics","topic","overlay","Object","values","this","$store","state","objects","sort","a","b","level","map","relationships","data","ref","filter","item","$props","fid","dispatch","components","FloorMap","props","render"],"mappings":"iIACaA,MAAM,S,kHAAf,eAWU,UAXV,EAWU,CAVN,eAQK,Y,mBAPD,eAMK,2BANe,EAAAC,QAAM,SAAfC,G,wBAAX,eAMK,MANwBC,IAAKD,EAAMA,MAAME,I,CAC1C,eAIc,GAJAC,GAAE,0BAAgCH,EAAMA,MAAME,M,yBAAM,iBAAgC,C,8BAA9BF,EAAMA,MAAMI,WAAWC,OAAO,IAC9F,kBAEO,c,mBADH,eAAqF,2BAA/DL,EAAMM,QAAM,SAArBC,G,wBAAb,eAAqF,QAAhDN,IAAKM,EAAML,I,eAAMK,EAAMH,WAAWC,OAAK,M,2CAK3E,EAAAL,O,iBAAjB,eAAyD,G,MAAhCA,MAAO,EAAAA,MAAQQ,SAAS,G,yLCEpC,EAArB,sKAKI,WAAiB,WACPT,EAASU,OAAOC,OAAOC,KAAKC,OAAOC,MAAMC,QAAQf,QAQvD,OAPAA,EAAOgB,MAAK,SAACC,EAAGC,GACZ,OAAID,EAAEZ,YAAca,EAAEb,WACVY,EAAEZ,WAAWc,MAAoBD,EAAEb,WAAWc,MAE/C,KAGRnB,EAAOoB,KAAI,SAACnB,GACf,IAAIM,EAAS,GAUb,OATIN,EAAMoB,gBACNd,EAAUN,EAAMoB,cAAcd,OAAOe,KAA4BF,KAAI,SAACG,GAClE,OAAI,EAAKV,OAAOC,MAAMC,QAAQ,gBAAgBQ,EAAIpB,IACvC,EAAKU,OAAOC,MAAMC,QAAQ,gBAAgBQ,EAAIpB,IAE9C,QAEZqB,QAAO,SAACC,GAAW,OAAgB,OAATA,MAE1B,CACHxB,MAAOA,EACPM,OAAQA,QA3BxB,iBAgCI,WACI,OAAIK,KAAKC,OAAOC,MAAMC,QAAQf,OAAOY,KAAKc,OAAOC,KACtCf,KAAKC,OAAOC,MAAMC,QAAQf,OAAOY,KAAKc,OAAOC,KAEjD,OApCf,qBAuCW,WACHf,KAAKC,OAAOe,SAAS,mBAxC7B,GAAkC,QAAb,EAAI,gBANxB,eAAQ,CACLC,WAAY,CACRC,WAAA,MAEJC,MAAO,CAAC,UAES,WCVrB,EAAOC,OAASA,EAED","file":"js/floor.9a542c4e.js","sourcesContent":["<template>\n    <article class=\"floor\">\n        <ol>\n            <li v-for=\"floor in floors\" :key=\"floor.floor.id\">\n                <router-link :to=\"{name: 'floor', params: {fid: floor.floor.id}}\">{{floor.floor.attributes.label}}\n                    <span>\n                        <span v-for=\"topic in floor.topics\" :key=\"topic.id\">{{topic.attributes.label}}</span>\n                    </span>\n                </router-link>\n            </li>\n        </ol>\n        <floor-map v-if=\"floor\" :floor=\"floor\" :overlay=\"false\"/>\n    </article>\n</template>\n\n<script lang=\"ts\">\nimport { Options } from 'vue-class-component';\n\nimport { ComponentRoot } from '@/base';\nimport FloorMap from '../components/FloorMap.vue';\nimport { JSONAPIItem, JSONAPIReference } from '@/store';\n\n@Options({\n    components: {\n        FloorMap,\n    },\n    props: ['fid']\n})\nexport default class Room extends ComponentRoot {\n    $props!: {\n        fid: string;\n    };\n\n    public get floors() {\n        const floors = Object.values(this.$store.state.objects.floors) as JSONAPIItem[];\n        floors.sort((a, b) => {\n            if (a.attributes && b.attributes) {\n                return (a.attributes.level as number) - (b.attributes.level as number);\n            } else {\n                return 0;\n            }\n        });\n        return floors.map((floor) => {\n            let topics = [] as JSONAPIItem[];\n            if (floor.relationships) {\n                topics = (floor.relationships.topics.data as JSONAPIReference[]).map((ref) => {\n                    if (this.$store.state.objects['floor-topics'][ref.id]) {\n                        return this.$store.state.objects['floor-topics'][ref.id];\n                    } else {\n                        return null;\n                    }\n                }).filter((item) => { return item !== null; }) as JSONAPIItem[];\n            }\n            return {\n                floor: floor,\n                topics: topics\n            }\n        });\n    }\n\n    public get floor() {\n        if (this.$store.state.objects.floors[this.$props.fid]) {\n            return this.$store.state.objects.floors[this.$props.fid];\n        }\n        return null;\n    }\n\n    public created() {\n        this.$store.dispatch('fetchFloors');\n    }\n}\n</script>\n","\nimport { Options } from 'vue-class-component';\n\nimport { ComponentRoot } from '@/base';\nimport FloorMap from '../components/FloorMap.vue';\nimport { JSONAPIItem, JSONAPIReference } from '@/store';\n\n@Options({\n    components: {\n        FloorMap,\n    },\n    props: ['fid']\n})\nexport default class Room extends ComponentRoot {\n    $props!: {\n        fid: string;\n    };\n\n    public get floors() {\n        const floors = Object.values(this.$store.state.objects.floors) as JSONAPIItem[];\n        floors.sort((a, b) => {\n            if (a.attributes && b.attributes) {\n                return (a.attributes.level as number) - (b.attributes.level as number);\n            } else {\n                return 0;\n            }\n        });\n        return floors.map((floor) => {\n            let topics = [] as JSONAPIItem[];\n            if (floor.relationships) {\n                topics = (floor.relationships.topics.data as JSONAPIReference[]).map((ref) => {\n                    if (this.$store.state.objects['floor-topics'][ref.id]) {\n                        return this.$store.state.objects['floor-topics'][ref.id];\n                    } else {\n                        return null;\n                    }\n                }).filter((item) => { return item !== null; }) as JSONAPIItem[];\n            }\n            return {\n                floor: floor,\n                topics: topics\n            }\n        });\n    }\n\n    public get floor() {\n        if (this.$store.state.objects.floors[this.$props.fid]) {\n            return this.$store.state.objects.floors[this.$props.fid];\n        }\n        return null;\n    }\n\n    public created() {\n        this.$store.dispatch('fetchFloors');\n    }\n}\n","import { render } from \"./Floor.vue?vue&type=template&id=63e56986\"\nimport script from \"./Floor.vue?vue&type=script&lang=ts\"\nexport * from \"./Floor.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}