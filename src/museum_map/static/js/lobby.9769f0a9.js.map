{"version":3,"sources":["webpack:///./src/views/Lobby.vue","webpack:///./src/views/Lobby.vue?246e","webpack:///./src/views/Lobby.vue?253c"],"names":["class","floors","floor","key","id","setMapFloorId","attributes","label","topics","topic","to","relationships","room","data","samples","item","src","thumbImageURL","images","alt","title","floorId","this","$store","commit","imageId","split","join","state","objects","Object","values","sort","a","b","level","map","ref","filter","items","components","render"],"mappings":"mIACaA,MAAM,S,GAICA,MAAM,U,GAMNA,MAAM,W,oFAVtB,eAqBU,UArBV,EAqBU,CApBN,eAmBK,Y,mBAlBD,eAiBK,2BAjBe,EAAAC,QAAM,SAAfC,G,wBAAX,eAiBK,MAjBwBC,IAAKD,EAAMA,MAAME,I,CAC1C,eAAmG,WAA/F,eAA0F,UAAjF,QAAK,mBAAE,EAAAC,cAAcH,EAAMA,MAAME,M,eAAQF,EAAMA,MAAMI,WAAWC,OAAK,iBAClF,eAKK,KALL,EAKK,E,mBAJD,eAEK,2BAFeL,EAAMM,QAAM,SAArBC,G,wBAAX,eAEK,MAF8BN,IAAKM,EAAML,I,CAC1C,eAA6H,GAA/GM,GAAE,yBAA+BD,EAAME,cAAcC,KAAKC,KAAKT,M,yBAAM,iBAA4B,C,8BAAzBK,EAAMH,WAAWC,OAAK,O,6BAEhH,eAAoE,WAAhE,eAA2D,UAAlD,QAAK,mBAAE,EAAAF,cAAcH,EAAMA,MAAME,MAAK,MAAG,mBAE1D,eAQK,KARL,EAQK,E,mBAPD,eAMK,2BANcF,EAAMY,SAAO,SAArBC,G,wBAAX,eAMK,MAN8BZ,IAAKY,EAAKX,I,CACzC,eAIc,GAJAM,GAAE,yBAA+BK,EAAKJ,cAAcC,KAAKC,KAAKT,GAAE,IAAOW,EAAKX,M,yBACtF,iBAES,CAFT,eAES,eADL,eAA0H,OAApHY,IAAK,EAAAC,cAAcF,EAAKT,WAAWY,OAAM,IAAOC,IAAKJ,EAAKT,WAAWc,MAAQL,EAAKT,WAAWc,MAAK,c,8NCKnH,EAArB,wLAkDyBC,GACjBC,KAAKC,OAAOC,OAAO,gBAAiBH,KAnD5C,oCAsDyBI,GACjB,OAAIA,EACO,WAAaA,EAAQC,MAAM,IAAIC,KAAK,KAAO,IAAMF,EAAU,aAE3D,KA1DnB,6BACqB,WACb,GAAIH,KAAKC,OAAOK,MAAMC,QAAQ5B,OAAQ,CAClC,IAAIA,EAAS6B,OAAOC,OAAOT,KAAKC,OAAOK,MAAMC,QAAQ5B,QAYrD,OAXAA,EAASA,EAAO+B,MAAK,SAACC,EAAGC,GACrB,OAAID,EAAE3B,YAAc4B,EAAE5B,WACV2B,EAAE3B,WAAW6B,MAAoBD,EAAE5B,WAAW6B,MAC/CF,EAAE3B,YACD,EACD4B,EAAE5B,WACF,EAEA,KAGRL,EAAOmC,KAAI,SAAClC,GACf,GAAIA,EAAMS,cAAe,CACrB,IAAMH,EAAUN,EAAMS,cAAcH,OAAOK,KAA4BuB,KAAI,SAACC,GACxE,OAAI,EAAKd,OAAOK,MAAMC,QAAQ,gBAAgBQ,EAAIjC,IACvC,EAAKmB,OAAOK,MAAMC,QAAQ,gBAAgBQ,EAAIjC,IAE9C,QAEZkC,QAAO,SAACvB,GACP,OAAgB,OAATA,KAELD,EAAWZ,EAAMS,cAAcG,QAAQD,KAA4BuB,KAAI,SAACC,GAC1E,OAAI,EAAKd,OAAOK,MAAMC,QAAQU,MAAMF,EAAIjC,IAC7B,EAAKmB,OAAOK,MAAMC,QAAQU,MAAMF,EAAIjC,IAEpC,QAEZkC,QAAO,SAACvB,GACP,OAAgB,OAATA,KAEX,MAAO,CACHb,MAAOA,EACPY,QAASA,EACTN,OAAQA,GAGZ,OAAO,QAEZ8B,QAAO,SAACvB,GACP,OAAgB,OAATA,KAGf,MAAO,OA/Cf,GAAmC,QAAd,EAAK,gBAJzB,eAAQ,CACLyB,WAAY,MAGK,WCjBrB,EAAOC,OAASA,EAED","file":"js/lobby.9769f0a9.js","sourcesContent":["<template>\n    <article class=\"lobby\">\n        <ol>\n            <li v-for=\"floor in floors\" :key=\"floor.floor.id\">\n                <h2><button @click=\"setMapFloorId(floor.floor.id)\">{{ floor.floor.attributes.label }}</button></h2>\n                <ul class=\"topics\">\n                    <li v-for=\"topic in floor.topics\" :key=\"topic.id\">\n                        <router-link :to=\"{name: 'room', params: {rid: topic.relationships.room.data.id}}\">{{ topic.attributes.label }}</router-link>\n                    </li>\n                    <li><button @click=\"setMapFloorId(floor.floor.id)\">...</button></li>\n                </ul>\n                <ul class=\"samples\">\n                    <li v-for=\"item in floor.samples\" :key=\"item.id\">\n                        <router-link :to=\"{name: 'item', params: {rid: item.relationships.room.data.id, iid: item.id}}\">\n                            <figure>\n                                <img :src=\"thumbImageURL(item.attributes.images[0])\" :alt=\"item.attributes.title ? item.attributes.title : '[untitled]'\"/>\n                            </figure>\n                        </router-link>\n                    </li>\n                </ul>\n            </li>\n        </ol>\n    </article>\n</template>\n\n<script lang=\"ts\">\nimport { Options } from 'vue-class-component';\n\nimport { ComponentRoot } from '@/base';\nimport { JSONAPIItem, JSONAPIReference } from '@/store';\n\ninterface LobbyEntry {\n    floor: JSONAPIItem;\n    rooms: LobbyEntryRoom[];\n}\n\ninterface LobbyEntryRoom {\n    room: JSONAPIItem;\n    group: JSONAPIItem;\n}\n\n@Options({\n    components: {\n    }\n})\nexport default class Lobby extends ComponentRoot {\n    public get floors() {\n        if (this.$store.state.objects.floors) {\n            let floors = Object.values(this.$store.state.objects.floors);\n            floors = floors.sort((a, b) => {\n                if (a.attributes && b.attributes) {\n                    return (a.attributes.level as number) - (b.attributes.level as number);\n                } else if (a.attributes) {\n                    return -1;\n                } else if (b.attributes) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n            return floors.map((floor) => {\n                if (floor.relationships) {\n                    const topics = (floor.relationships.topics.data as JSONAPIReference[]).map((ref) => {\n                        if (this.$store.state.objects['floor-topics'][ref.id]) {\n                            return this.$store.state.objects['floor-topics'][ref.id];\n                        } else {\n                            return null;\n                        }\n                    }).filter((item) => {\n                        return item !== null;\n                    });\n                    const samples = (floor.relationships.samples.data as JSONAPIReference[]).map((ref) => {\n                        if (this.$store.state.objects.items[ref.id]) {\n                            return this.$store.state.objects.items[ref.id];\n                        } else {\n                            return null;\n                        }\n                    }).filter((item) => {\n                        return item !== null;\n                    });\n                    return {\n                        floor: floor,\n                        samples: samples,\n                        topics: topics,\n                    };\n                } else {\n                    return null;\n                }\n            }).filter((item) => {\n                return item !== null;\n            });\n        }\n        return [];\n    }\n\n    public setMapFloorId(floorId: string) {\n        this.$store.commit('setMapFloorId', floorId);\n    }\n\n    public thumbImageURL(imageId: string) {\n        if (imageId) {\n            return '/images/' + imageId.split('').join('/') + '/' + imageId + '-thumb.jpg';\n        } else {\n            return '';\n        }\n    }\n}\n</script>\n","\nimport { Options } from 'vue-class-component';\n\nimport { ComponentRoot } from '@/base';\nimport { JSONAPIItem, JSONAPIReference } from '@/store';\n\ninterface LobbyEntry {\n    floor: JSONAPIItem;\n    rooms: LobbyEntryRoom[];\n}\n\ninterface LobbyEntryRoom {\n    room: JSONAPIItem;\n    group: JSONAPIItem;\n}\n\n@Options({\n    components: {\n    }\n})\nexport default class Lobby extends ComponentRoot {\n    public get floors() {\n        if (this.$store.state.objects.floors) {\n            let floors = Object.values(this.$store.state.objects.floors);\n            floors = floors.sort((a, b) => {\n                if (a.attributes && b.attributes) {\n                    return (a.attributes.level as number) - (b.attributes.level as number);\n                } else if (a.attributes) {\n                    return -1;\n                } else if (b.attributes) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            });\n            return floors.map((floor) => {\n                if (floor.relationships) {\n                    const topics = (floor.relationships.topics.data as JSONAPIReference[]).map((ref) => {\n                        if (this.$store.state.objects['floor-topics'][ref.id]) {\n                            return this.$store.state.objects['floor-topics'][ref.id];\n                        } else {\n                            return null;\n                        }\n                    }).filter((item) => {\n                        return item !== null;\n                    });\n                    const samples = (floor.relationships.samples.data as JSONAPIReference[]).map((ref) => {\n                        if (this.$store.state.objects.items[ref.id]) {\n                            return this.$store.state.objects.items[ref.id];\n                        } else {\n                            return null;\n                        }\n                    }).filter((item) => {\n                        return item !== null;\n                    });\n                    return {\n                        floor: floor,\n                        samples: samples,\n                        topics: topics,\n                    };\n                } else {\n                    return null;\n                }\n            }).filter((item) => {\n                return item !== null;\n            });\n        }\n        return [];\n    }\n\n    public setMapFloorId(floorId: string) {\n        this.$store.commit('setMapFloorId', floorId);\n    }\n\n    public thumbImageURL(imageId: string) {\n        if (imageId) {\n            return '/images/' + imageId.split('').join('/') + '/' + imageId + '-thumb.jpg';\n        } else {\n            return '';\n        }\n    }\n}\n","import { render } from \"./Lobby.vue?vue&type=template&id=73a2896c&bindings={}\"\nimport script from \"./Lobby.vue?vue&type=script&lang=ts\"\nexport * from \"./Lobby.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}